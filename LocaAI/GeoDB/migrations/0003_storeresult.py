# Generated by Django 5.2.3 on 2025-06-17 06:41

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("GeoDB", "0002_administrativedistrict_administrativedistrictstats"),
    ]

    operations = [
        migrations.CreateModel(
            name="StoreResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("area", models.FloatField(blank=True, null=True, verbose_name="면적")),
                (
                    "adjacent_biz",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="인접업체수"
                    ),
                ),
                (
                    "life_pop_total",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="총생활인구"
                    ),
                ),
                (
                    "life_pop_20_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="20대_300m"
                    ),
                ),
                (
                    "life_pop_30_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="30대_300m"
                    ),
                ),
                (
                    "life_pop_40_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="40대_300m"
                    ),
                ),
                (
                    "life_pop_50_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="50대_300m"
                    ),
                ),
                (
                    "life_pop_60_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="60대_300m"
                    ),
                ),
                (
                    "life_pop_20_1000m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="20대_1000m"
                    ),
                ),
                (
                    "life_pop_30_1000m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="30대_1000m"
                    ),
                ),
                (
                    "life_pop_40_1000m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="40대_1000m"
                    ),
                ),
                (
                    "life_pop_50_1000m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="50대_1000m"
                    ),
                ),
                (
                    "life_pop_60_1000m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="60대_1000m"
                    ),
                ),
                (
                    "temp_foreign_total",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="단기체류외국인총계"
                    ),
                ),
                (
                    "temp_foreign_cn_300m",
                    models.FloatField(
                        blank=True, null=True, verbose_name="단기체류중국인_300m"
                    ),
                ),
                (
                    "temp_foreign_cn_1000m",
                    models.FloatField(
                        blank=True, null=True, verbose_name="단기체류중국인_1000m"
                    ),
                ),
                (
                    "long_foreign_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="장기체류외국인_300m"
                    ),
                ),
                (
                    "long_foreign_1000m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="장기체류외국인_1000m"
                    ),
                ),
                (
                    "long_foreign_cn_1000m",
                    models.FloatField(
                        blank=True, null=True, verbose_name="장기체류중국인_1000m"
                    ),
                ),
                (
                    "working_pop_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="직장인구_300m"
                    ),
                ),
                (
                    "public_building_250m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="공공건물_250m"
                    ),
                ),
                (
                    "school_250m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="학교_250m"
                    ),
                ),
                (
                    "competitor_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="경쟁업체_300m"
                    ),
                ),
                (
                    "business_diversity_300m",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="업종다양성_300m"
                    ),
                ),
                (
                    "uptaenm",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="업종명"
                    ),
                ),
                (
                    "service_type",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="서비스유형"
                    ),
                ),
                (
                    "x_coord",
                    models.FloatField(blank=True, null=True, verbose_name="X좌표"),
                ),
                (
                    "y_coord",
                    models.FloatField(blank=True, null=True, verbose_name="Y좌표"),
                ),
                (
                    "total_land_value",
                    models.FloatField(blank=True, null=True, verbose_name="총공시지가"),
                ),
                (
                    "result",
                    models.FloatField(blank=True, null=True, verbose_name="예측결과"),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=5186, verbose_name="위치"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성시간"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정시간"),
                ),
            ],
            options={
                "verbose_name": "상점분석결과",
                "verbose_name_plural": "상점분석결과",
                "db_table": "store_result",
                "ordering": ["-created_at"],
                "managed": True,
            },
        ),
    ]
